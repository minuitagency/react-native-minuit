{"version":3,"names":["React","Animated","Pressable","StyleSheet","Text","View","SegmentedControl","options","selected","setSelected","style","animatedValue","useState","Value","buttonInterpolation","interpolate","inputRange","outputRange","useEffect","timing","useNativeDriver","toValue","duration","start","backgroundColor","padding","height","borderRadius","flexDirection","width","marginLeft","absoluteFillObject","map","text","i","isSelected","flex","justifyContent","alignItems","color"],"sources":["SegmentedControl.js"],"sourcesContent":["import React from 'react';\nimport { Animated, Pressable, StyleSheet, Text, View } from 'react-native';\n\nexport default function SegmentedControl({\n  options = [],\n  selected = options[0],\n  setSelected,\n  style,\n}) {\n  const [animatedValue] = React.useState(new Animated.Value(0));\n\n  const buttonInterpolation = animatedValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0%', '50%'],\n  });\n\n  React.useEffect(() => {\n    Animated.timing(animatedValue, {\n      useNativeDriver: false,\n      toValue: selected ? 1 : 0,\n      duration: 250,\n    }).start();\n  }, [selected]);\n\n  return (\n    <View\n      style={{\n        backgroundColor: '#EEEEEF',\n        padding: 3,\n        height: 35,\n        borderRadius: 20,\n        flexDirection: 'row',\n        ...style,\n      }}\n    >\n      <Animated.View\n        style={{\n          width: '50%',\n          backgroundColor: 'white',\n          borderRadius: 15,\n          marginLeft: buttonInterpolation,\n        }}\n      />\n      <View style={[StyleSheet.absoluteFillObject, { flexDirection: 'row' }]}>\n        {options.map((text, i) => {\n          const isSelected = (i === 0 && !selected) || (i === 1 && selected);\n          return (\n            <Pressable\n              key={i}\n              onPress={() => setSelected(i === 1)}\n              disabled={isSelected}\n              style={{\n                flex: 1,\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              <Text style={{ color: isSelected ? 'black' : 'gray' }}>\n                {text}\n              </Text>\n            </Pressable>\n          );\n        })}\n      </View>\n    </View>\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,EAA0CC,IAA1C,EAAgDC,IAAhD,QAA4D,cAA5D;AAEA,eAAe,SAASC,gBAAT,OAKZ;EAAA,IALsC;IACvCC,OAAO,GAAG,EAD6B;IAEvCC,QAAQ,GAAGD,OAAO,CAAC,CAAD,CAFqB;IAGvCE,WAHuC;IAIvCC;EAJuC,CAKtC;EACD,MAAM,CAACC,aAAD,IAAkBX,KAAK,CAACY,QAAN,CAAe,IAAIX,QAAQ,CAACY,KAAb,CAAmB,CAAnB,CAAf,CAAxB;EAEA,MAAMC,mBAAmB,GAAGH,aAAa,CAACI,WAAd,CAA0B;IACpDC,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADwC;IAEpDC,WAAW,EAAE,CAAC,IAAD,EAAO,KAAP;EAFuC,CAA1B,CAA5B;EAKAjB,KAAK,CAACkB,SAAN,CAAgB,MAAM;IACpBjB,QAAQ,CAACkB,MAAT,CAAgBR,aAAhB,EAA+B;MAC7BS,eAAe,EAAE,KADY;MAE7BC,OAAO,EAAEb,QAAQ,GAAG,CAAH,GAAO,CAFK;MAG7Bc,QAAQ,EAAE;IAHmB,CAA/B,EAIGC,KAJH;EAKD,CAND,EAMG,CAACf,QAAD,CANH;EAQA,oBACE,oBAAC,IAAD;IACE,KAAK,EAAE;MACLgB,eAAe,EAAE,SADZ;MAELC,OAAO,EAAE,CAFJ;MAGLC,MAAM,EAAE,EAHH;MAILC,YAAY,EAAE,EAJT;MAKLC,aAAa,EAAE,KALV;MAML,GAAGlB;IANE;EADT,gBAUE,oBAAC,QAAD,CAAU,IAAV;IACE,KAAK,EAAE;MACLmB,KAAK,EAAE,KADF;MAELL,eAAe,EAAE,OAFZ;MAGLG,YAAY,EAAE,EAHT;MAILG,UAAU,EAAEhB;IAJP;EADT,EAVF,eAkBE,oBAAC,IAAD;IAAM,KAAK,EAAE,CAACX,UAAU,CAAC4B,kBAAZ,EAAgC;MAAEH,aAAa,EAAE;IAAjB,CAAhC;EAAb,GACGrB,OAAO,CAACyB,GAAR,CAAY,CAACC,IAAD,EAAOC,CAAP,KAAa;IACxB,MAAMC,UAAU,GAAID,CAAC,KAAK,CAAN,IAAW,CAAC1B,QAAb,IAA2B0B,CAAC,KAAK,CAAN,IAAW1B,QAAzD;IACA,oBACE,oBAAC,SAAD;MACE,GAAG,EAAE0B,CADP;MAEE,OAAO,EAAE,MAAMzB,WAAW,CAACyB,CAAC,KAAK,CAAP,CAF5B;MAGE,QAAQ,EAAEC,UAHZ;MAIE,KAAK,EAAE;QACLC,IAAI,EAAE,CADD;QAELC,cAAc,EAAE,QAFX;QAGLC,UAAU,EAAE;MAHP;IAJT,gBAUE,oBAAC,IAAD;MAAM,KAAK,EAAE;QAAEC,KAAK,EAAEJ,UAAU,GAAG,OAAH,GAAa;MAAhC;IAAb,GACGF,IADH,CAVF,CADF;EAgBD,CAlBA,CADH,CAlBF,CADF;AA0CD"}