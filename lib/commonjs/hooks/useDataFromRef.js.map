{"version":3,"names":["useDataFromRef","ref","initialState","refreshArray","initialDocumentRef","documentID","listener","condition","simpleRef","usePagination","updateGlobalState","batchSize","format","onUpdate","loading","setLoading","useState","endReached","setEndReached","data","setData","lastVisible","setLastVisible","useEffect","subData","getListenerData","resetState","getData","paginate","loadMore","console","log","newData","initialDoc","get","dynamicRef","startAfter","limit","startAt","dataSnap","id","docs","length","map","item","updateData","e","onSnapshot","setGlobal"],"sources":["useDataFromRef.js"],"sourcesContent":["import { useState, setGlobal } from 'reactn';\nimport { useEffect } from 'react';\n\nexport default function useDataFromRef({\n  ref,\n\n  initialState = [],\n  refreshArray = [],\n\n  initialDocumentRef = null,\n  documentID = 'id',\n  listener = false,\n\n  condition = true,\n  simpleRef = false,\n\n  usePagination = false,\n\n  updateGlobalState = null,\n\n  batchSize = 4,\n\n  format = null,\n  onUpdate = () => null,\n}) {\n  const [loading, setLoading] = useState(true);\n  const [endReached, setEndReached] = useState(false);\n  const [data, setData] = useState(initialState);\n  const [lastVisible, setLastVisible] = useState(null);\n\n  useEffect(() => {\n    if (condition) {\n      if (listener && !usePagination) {\n        const subData = getListenerData();\n        return () => subData?.();\n      } else {\n        resetState();\n\n        getData({ paginate: usePagination });\n      }\n    } else {\n      resetState();\n    }\n  }, [...refreshArray, condition, usePagination]);\n\n  const loadMore = () => {\n    if (!loading && !endReached) {\n      getData({ paginate: true });\n      console.log('Loading more');\n    }\n  };\n\n  const resetState = () => {\n    if (data !== initialState) {\n      onUpdate(initialState);\n    }\n\n    setEndReached(false);\n    setLastVisible(null);\n    setData(initialState);\n  };\n\n  const getData = async ({ paginate = false } = {}) => {\n    try {\n      setLoading(true);\n      let newData = simpleRef ? null : [];\n      let initialDoc = null;\n\n      if (initialDocumentRef && !lastVisible && !simpleRef) {\n        initialDoc = await initialDocumentRef.get();\n      }\n\n      const dynamicRef =\n        paginate && lastVisible\n          ? ref.startAfter(lastVisible).limit(batchSize)\n          : initialDoc\n          ? ref.startAt(initialDoc).limit(batchSize)\n          : paginate\n          ? ref.limit(batchSize)\n          : ref;\n\n      const dataSnap = await dynamicRef.get();\n\n      if (simpleRef && dataSnap.data()) {\n        newData = { ...dataSnap.data(), [documentID]: dataSnap.id };\n      } else if (!simpleRef && dataSnap.docs.length > 0) {\n        newData = dataSnap.docs.map((item) => {\n          return { ...item.data(), [documentID]: item.id };\n        });\n\n        if (paginate) {\n          if (batchSize !== dataSnap.docs.length) {\n            setEndReached(true);\n          }\n          setLastVisible(dataSnap.docs[dataSnap.docs.length - 1]);\n        }\n      }\n\n      if (newData) {\n        if (paginate) {\n          console.log('new pagination');\n          await updateData([...data, ...newData]);\n        } else {\n          await updateData(newData);\n        }\n      } else {\n        console.log('NO DATA');\n      }\n    } catch (e) {\n      console.log('useDataFromRef ' + e);\n      await updateData([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getListenerData = () => {\n    return ref?.onSnapshot(\n      async (dataSnap) => {\n        let newData;\n\n        if (simpleRef) {\n          newData = { ...dataSnap.data(), [documentID]: dataSnap.id };\n        } else {\n          newData = dataSnap.docs.map((item) => {\n            return { ...item.data(), [documentID]: item.id };\n          });\n        }\n        await updateData(newData);\n        setLoading(false);\n      },\n      async (e) => {\n        console.log(e);\n        await updateData([]);\n        setLoading(false);\n      }\n    );\n  };\n\n  const updateData = async (newData) => {\n    setData(format ? await format(newData) : newData);\n    onUpdate(newData);\n\n    if (updateGlobalState) {\n      setGlobal({ [updateGlobalState]: data });\n    }\n  };\n\n  return { data, setData, loading, loadMore };\n}\n"],"mappings":"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"}