{"version":3,"names":["AddressSelection","visible","setIsVisible","coordinates","setCoordinates","newCoordinates","setNewCoordinates","useState","mapRef","useRef","flex","StyleSheet","absoluteFill","latitude","longitude","latitudeDelta","longitudeDelta","position","top","responsiveHeight","right","left","borderRadius","address","height","width","tintColor","Palette","primary","require","returnKeyType","autoFocus","Fonts","regular","black","apiKeyGooglePlaces","inputData","geometry","location","lat","lng","formatted_address","result","formatCoordinates","animateToCoordinates","Style","con","pos","b","r","l","w","backgroundColor","gray2","bold","white"],"sources":["AddressSelection.js"],"sourcesContent":["import React, { useState, useRef } from 'reactn';\nimport { Image, StyleSheet, Modal } from 'react-native';\nimport { responsiveHeight } from 'react-native-responsive-dimensions';\nimport PlacesInput from 'react-native-places-input';\nimport MapView, { Marker } from 'react-native-maps';\n\nimport { Fonts, Palette, Style } from 'styles';\nimport { Button, DismissKeyboard } from 'components';\n\nimport {\n  formatCoordinates,\n  animateToCoordinates,\n} from '../../actions/locationActions';\n\nimport { apiKeyGooglePlaces } from '../config/config';\n\nexport default function AddressSelection({\n  visible = false,\n  setIsVisible = () => null,\n\n  coordinates = null,\n  setCoordinates,\n}) {\n  const [newCoordinates, setNewCoordinates] = useState(coordinates || null);\n\n  const mapRef = useRef();\n\n  return (\n    <Modal\n      presentationStyle={'formSheet'}\n      animationType=\"slide\"\n      visible={visible}\n      onRequestClose={() => {\n        setIsVisible(false);\n      }}\n      style={{ flex: 1 }}\n    >\n      <DismissKeyboard>\n        <MapView\n          ref={mapRef}\n          rotateEnabled={false}\n          style={{\n            flex: 1,\n            ...StyleSheet.absoluteFill,\n          }}\n          region={{\n            latitude: 44.853057263793794,\n            longitude: -0.5679415038745691,\n            latitudeDelta: 10,\n            longitudeDelta: 10,\n          }}\n        >\n          {newCoordinates && (\n            <Marker\n              coordinate={{\n                latitude: newCoordinates?.coordinates?.latitude || 0,\n                longitude: newCoordinates?.coordinates?.longitude || 0,\n              }}\n            />\n          )}\n        </MapView>\n\n        <PlacesInput\n          stylesContainer={{\n            position: 'absolute',\n            top: responsiveHeight(5),\n            right: 24,\n            left: 24,\n          }}\n          stylesInput={{ borderRadius: 10 }}\n          clearQueryOnSelect\n          placeHolder={\n            newCoordinates?.address || \"Quelle est l'adresse de l'évènement?\"\n          }\n          iconInput={\n            <Image\n              style={{\n                height: 20,\n                width: 30,\n                tintColor: Palette.primary,\n              }}\n              resizeMode=\"contain\"\n              source={require('../assets/icons/focusLocation.png')}\n            />\n          }\n          textInputProps={{\n            returnKeyType: 'done',\n            autoFocus: true,\n            ...Fonts.primary.regular(14, Palette.black),\n          }}\n          googleApiKey={apiKeyGooglePlaces}\n          queryFields={'formatted_address,geometry,name,address_components'}\n          onSelect={(inputData) => {\n            const {\n              geometry: {\n                location: { lat: latitude, lng: longitude },\n              },\n              formatted_address: address,\n            } = inputData.result;\n\n            setNewCoordinates(\n              formatCoordinates({\n                latitude,\n                longitude,\n                address,\n              })\n            );\n\n            animateToCoordinates({\n              coordinates: { latitude, longitude },\n              mapRef,\n            });\n          }}\n          language={'fr-FR'}\n        />\n\n        <Button\n          onPress={() => {\n            if (newCoordinates) {\n              setCoordinates(newCoordinates);\n            }\n\n            setIsVisible(false);\n          }}\n          value=\"Valider l'adresse\"\n          containerStyle={[\n            Style.con({ pos: 'absolute', b: 145, r: 24, l: 24, w: 'auto' }),\n          ]}\n        />\n\n        <Button\n          onPress={() => setIsVisible(false)}\n          value=\"Annuler\"\n          containerStyle={Style.con({\n            pos: 'absolute',\n            b: 90,\n            r: 24,\n            l: 24,\n            w: 'auto',\n          })}\n          style={{ backgroundColor: Palette.gray2 }}\n          textStyle={Fonts.primary.bold(16, Palette.white)}\n        />\n      </DismissKeyboard>\n    </Modal>\n  );\n}\n"],"mappings":"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"}