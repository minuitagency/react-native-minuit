{"version":3,"names":["Button","beforeText","containerStyle","style","text","onPress","primary","textStyle","textColor","isAbsoluteBottom","_config","colors","getGlobal","bgColor","Palette","tran","textColorButton","mainWhite","width","position","bottom","gutters","right","left","SharedStyles","containerCenter","height","responsiveHeight","borderRadius","backgroundColor","flexDirection","scale","type","damping","stiffness","Fonts","bold"],"sources":["Button.js"],"sourcesContent":["import React from 'react';\nimport { Text } from 'react-native';\nimport { responsiveHeight } from 'react-native-responsive-dimensions';\nimport { Motion } from '@legendapp/motion';\nimport { Fonts, gutters, Palette, SharedStyles } from '../../styles';\nimport { getGlobal } from 'reactn';\n\nconst Button = ({\n  beforeText = null,\n\n  containerStyle = {},\n  style = {},\n\n  text,\n  onPress,\n\n  primary,\n\n  textStyle,\n  textColor,\n\n  isAbsoluteBottom = false,\n}) => {\n  const {\n    _config: { colors },\n  } = getGlobal();\n  const bgColor = primary ? colors.primary : Palette.tran;\n  const textColorButton = primary ? Palette.mainWhite : textColor;\n\n  return (\n    <Motion.Pressable\n      onPress={onPress}\n      style={[\n        { width: '100%' },\n        isAbsoluteBottom\n          ? {\n              position: 'absolute',\n              bottom: 2 * gutters,\n              right: gutters,\n              left: gutters,\n            }\n          : {},\n        containerStyle,\n      ]}\n    >\n      <Motion.View\n        style={[\n          SharedStyles.containerCenter,\n          {\n            height: responsiveHeight(5),\n            borderRadius: 10,\n            backgroundColor: bgColor,\n            flexDirection: 'row',\n          },\n          { flexDirection: 'row' },\n          style,\n        ]}\n        whileTap={{ scale: 0.95 }}\n        transition={{\n          type: 'spring',\n          damping: 20,\n          stiffness: 300,\n        }}\n      >\n        {beforeText?.()}\n        <Text style={[Fonts.primary.bold(15, textColorButton), textStyle]}>\n          {text}\n        </Text>\n      </Motion.View>\n    </Motion.Pressable>\n  );\n};\n\nexport default Button;\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,MAAM,GAAG,QAeT;EAAA,IAfU;IACdC,UAAU,GAAG,IADC;IAGdC,cAAc,GAAG,EAHH;IAIdC,KAAK,GAAG,EAJM;IAMdC,IANc;IAOdC,OAPc;IASdC,OATc;IAWdC,SAXc;IAYdC,SAZc;IAcdC,gBAAgB,GAAG;EAdL,CAeV;EACJ,MAAM;IACJC,OAAO,EAAE;MAAEC;IAAF;EADL,IAEF,IAAAC,iBAAA,GAFJ;EAGA,MAAMC,OAAO,GAAGP,OAAO,GAAGK,MAAM,CAACL,OAAV,GAAoBQ,eAAA,CAAQC,IAAnD;EACA,MAAMC,eAAe,GAAGV,OAAO,GAAGQ,eAAA,CAAQG,SAAX,GAAuBT,SAAtD;EAEA,oBACE,6BAAC,cAAD,CAAQ,SAAR;IACE,OAAO,EAAEH,OADX;IAEE,KAAK,EAAE,CACL;MAAEa,KAAK,EAAE;IAAT,CADK,EAELT,gBAAgB,GACZ;MACEU,QAAQ,EAAE,UADZ;MAEEC,MAAM,EAAE,IAAIC,eAFd;MAGEC,KAAK,EAAED,eAHT;MAIEE,IAAI,EAAEF;IAJR,CADY,GAOZ,EATC,EAULnB,cAVK;EAFT,gBAeE,6BAAC,cAAD,CAAQ,IAAR;IACE,KAAK,EAAE,CACLsB,oBAAA,CAAaC,eADR,EAEL;MACEC,MAAM,EAAE,IAAAC,iDAAA,EAAiB,CAAjB,CADV;MAEEC,YAAY,EAAE,EAFhB;MAGEC,eAAe,EAAEhB,OAHnB;MAIEiB,aAAa,EAAE;IAJjB,CAFK,EAQL;MAAEA,aAAa,EAAE;IAAjB,CARK,EASL3B,KATK,CADT;IAYE,QAAQ,EAAE;MAAE4B,KAAK,EAAE;IAAT,CAZZ;IAaE,UAAU,EAAE;MACVC,IAAI,EAAE,QADI;MAEVC,OAAO,EAAE,EAFC;MAGVC,SAAS,EAAE;IAHD;EAbd,GAmBGjC,UAnBH,aAmBGA,UAnBH,uBAmBGA,UAAU,EAnBb,eAoBE,6BAAC,iBAAD;IAAM,KAAK,EAAE,CAACkC,aAAA,CAAM7B,OAAN,CAAc8B,IAAd,CAAmB,EAAnB,EAAuBpB,eAAvB,CAAD,EAA0CT,SAA1C;EAAb,GACGH,IADH,CApBF,CAfF,CADF;AA0CD,CAhED;;eAkEeJ,M"}